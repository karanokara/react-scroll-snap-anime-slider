.react-scroll-snap-anime-slider {
    .slider {
        position: relative;

        .slider-tray {
        }
        .slider-tray::-webkit-scrollbar {
            display: none;
        }

        .slider-tray.css-only {
            display: flex;
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;

            // set padding on container for elements have the same spacing requirements
            // scroll-padding: 2rem;
            // padding: 2rem;   // set padding to the same as scroll-padding to align up

            .slide {
                flex-shrink: 0;

                // tells the browser which part of an element should be aligned when a snap point is encountered
                // scroll-snap-align: [ none | start | end | center ]{1,2}
                scroll-snap-align: start;
                scroll-snap-stop: normal;

                // used to adjust an elementâ€™s snap area
                // scroll-margin: 20px;

                .slide-inner {
                    position: relative;

                    .slide-inner-inner.fixed-size {
                        position: absolute;
                        width: 100%;
                        height: 100%;
                        left: 0;
                        top: 0;
                    }
                }
            }

            .slide.snap-stop {
                // tell the browser that it must stop on a particular element
                scroll-snap-stop: always;
            }
        }

        .slider-tray.css-only.scroll-snap {
            // scrolling behavior for a scrolling box
            scroll-behavior: smooth;

            // prevents scroll chaining (not scroll the parent container when hit boundary)
            // but preserve overscroll affordances like "bounce" effects when scrolling past the end of the container in operating systems that support it.
            // useful on vertical slider, not for horizontal slider
            // overscroll-behavior: [ contain | none | auto ]{1,2};
            // overscroll-behavior: contain; // default is auto

            // proximity tells the browser to go to a snap position if a scrolling action gets pretty close to a snap position
            // scroll-snap-type: none | [ x | y | block | inline | both ] [ mandatory | proximity ]
            scroll-snap-type: x mandatory;
        }
    }

    .slider-bar {
        .slider-bar-track {
            background-color: #eee;
            position: relative;
            height: 10px;

            .slider-bar-thumb {
                position: absolute;
                left: 0;
                top: 0;
                height: 100%;
                background-color: #555;
            }
        }

        .slider-bar-dot-group {
            display: flex;
            justify-content: center;
            position: relative;

            .slider-dot {
                height: 8px;
                width: 8px;
                border-radius: 50%;
                background-color: #555;
                margin: 0 4px;
            }

            .slider-dot:not(.dynamic) {
                background-color: #ddd;
            }

            .slider-dot.active:not(.dynamic) {
                background-color: #666;
            }
        }
    }
}
