"use strict";(self.webpackChunkreact_scroll_snap_anime_slider_docs=self.webpackChunkreact_scroll_snap_anime_slider_docs||[]).push([[39],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),d=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=d(r),c=a,k=m["".concat(p,".").concat(c)]||m[c]||u[c]||l;return r?n.createElement(k,o(o({ref:t},s),{},{components:r})):n.createElement(k,o({ref:t},s))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var d=2;d<l;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},5623:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var n=r(7462),a=(r(7294),r(3905));const l={sidebar_position:6,title:"SliderBarDotGroup"},o="<SliderDotGroup/>",i={unversionedId:"component-api/slider-bar-dot-group",id:"component-api/slider-bar-dot-group",title:"SliderBarDotGroup",description:"This a customizable dot group component for the slider.",source:"@site/docs/component-api/slider-bar-dot-group.md",sourceDirName:"component-api",slug:"/component-api/slider-bar-dot-group",permalink:"/react-scroll-snap-anime-slider/docs/component-api/slider-bar-dot-group",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"SliderBarDotGroup"},sidebar:"tutorialSidebar",previous:{title:"SliderBarLine",permalink:"/react-scroll-snap-anime-slider/docs/component-api/slider-bar-line"}},p={},d=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Other Props",id:"other-props",level:2},{value:"IRenderDotsProps",id:"irenderdotsprops",level:3},{value:"CSS",id:"css",level:2}],s={toc:d},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sliderdotgroup"},(0,a.kt)("inlineCode",{parentName:"h1"},"<SliderDotGroup/>")),(0,a.kt)("p",null,"This a customizable dot group component for the slider."),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import {SliderBarDotGroup, renderDotsDynamicCircle} from "react-scroll-snap-anime-slider";\n')),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"An example to use dynamic circle as dot group by using ",(0,a.kt)("inlineCode",{parentName:"p"},"renderDotsDynamicCircle")," as a dot rendering function:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<SliderBarDotGroup\n    id="my-slider-dot-group"\n    className="my-class-name"\n    aria-label="slider bar"\n    dotGroupProps={{\n        id: "my-slider-bar-dot-group",\n    }}\n    renderDots={renderDotsDynamicCircle}\n/>\n')),(0,a.kt)("p",null,"Also there is a ",(0,a.kt)("inlineCode",{parentName:"p"},"renderDotsDynamicPill")," which will render dot as a pill:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import {SliderBarDotGroup, renderDotsDynamicPill} from "react-scroll-snap-anime-slider";\n')),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"dotGroupProps"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"React.HTMLAttributes<HTMLDivElement>")),(0,a.kt)("td",{parentName:"tr",align:"center"},"No"),(0,a.kt)("td",{parentName:"tr",align:"center"}),(0,a.kt)("td",{parentName:"tr",align:"left"},"Props to the dot group DIV")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"renderDots"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"(props: IRenderDotsProps) => JSX.Element / JSX.Element[]")),(0,a.kt)("td",{parentName:"tr",align:"center"},"No"),(0,a.kt)("td",{parentName:"tr",align:"center"}),(0,a.kt)("td",{parentName:"tr",align:"left"},"To customize the dot group rendering by using the state props passed in")))),(0,a.kt)("h2",{id:"other-props"},"Other Props"),(0,a.kt)("h3",{id:"irenderdotsprops"},"IRenderDotsProps"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"totalSlides"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Total slides in this slider")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"currentSlide"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Current slide index (from 0 ~ (length - visible slide - 1))")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"visibleSlides"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",{parentName:"tr",align:"left"},"How many visible slides (N), then the slide width = 100% / N")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"step"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",{parentName:"tr",align:"left"},"How mange slides per step (when click previous and next button)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"left"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",{parentName:"tr",align:"left"},"How far has scrolled in %, range in ","[0 ~ (100 - % of visible slides)]")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"slideTo"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"(slideIndex: number) => void")),(0,a.kt)("td",{parentName:"tr",align:"left"},"A function to call to control the slider to slide to a target slide ",(0,a.kt)("br",null)," From 0 ~ (length - visible slide - 1) ",(0,a.kt)("br",null)," If no customized function is provided, a default function will be used")))),(0,a.kt)("p",null,"A starter example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="MyDotGroup.tsx"',title:'"MyDotGroup.tsx"'},'import {SliderBarDotGroup, IRenderDotsProps} from "react-scroll-snap-anime-slider";\n\nfunction myRenderDots(props: IRenderDotsProps) {\n    let {\n        visibleSlides,\n        totalSlides,\n        step,\n        left,\n        currentSlide,\n        slideTo,\n    } = props;\n\n    let dots: JSX.Element[] = [];\n\n    for (let i = 0; i < totalSlides; ++i) {\n        // your customization code to get customized style\n\n        dots.push(\n            <div\n                className="my-dot-class"\n                key={i}\n                style={// customized style}\n                onClick={() => {\n                    slideTo(i);\n                }}\n            />\n        );\n    }\n    return dots;\n}\n\nexport function MyDotGroup(){\n    return (\n        <SliderBarDotGroup\n            renderDots={myRenderDots}\n        />\n    );\n}\n')),(0,a.kt)("h2",{id:"css"},"CSS"),(0,a.kt)("p",null,"You can override the default style by using these class names."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Rule Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".rssas-slider-bar")),(0,a.kt)("td",{parentName:"tr",align:null},"For bar wrapper")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".rssas-slider-bar-dot-group")),(0,a.kt)("td",{parentName:"tr",align:null},"For dot group DIV")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".rssas-slider-dot")),(0,a.kt)("td",{parentName:"tr",align:null},"For dot DIV (default dot rendering function)")))))}u.isMDXComponent=!0}}]);